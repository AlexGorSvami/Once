# –ó–∞–¥–∞—á–∞ –ò–æ—Å–∏—Ñ–∞ –§–ª–∞–≤–∏—è üå∂Ô∏èüå∂Ô∏è
#
# nn —á–µ–ª–æ–≤–µ–∫, –ø—Ä–æ–Ω—É–º–µ—Ä–æ–≤–∞–Ω–Ω—ã—Ö —á–∏—Å–ª–∞–º–∏ –æ—Ç 11 –¥–æ nn, —Å—Ç–æ—è—Ç –≤ –∫—Ä—É–≥—É. –û–Ω–∏ –Ω–∞—á–∏–Ω–∞—é—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è, –∫–∞–∂–¥—ã–π kk-–π –ø–æ —Å—á–µ—Ç—É —á–µ–ª–æ–≤–µ–∫ –≤—ã–±—ã–≤–∞–µ—Ç –∏–∑ –∫—Ä—É–≥–∞, –ø–æ—Å–ª–µ —á–µ–≥–æ —Å—á–µ—Ç –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è —Å–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞ –Ω–∏–º —á–µ–ª–æ–≤–µ–∫–∞. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –æ–ø—Ä–µ–¥–µ–ª—è—é—â—É—é –Ω–æ–º–µ—Ä —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤ –∫—Ä—É–≥—É –ø–æ—Å–ª–µ–¥–Ω–∏–º.
#
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞—é—Ç—Å—è –¥–≤–∞ —á–∏—Å–ª–∞ nn –∏ kk, –∑–∞–ø–∏—Å–∞–Ω–Ω—ã–µ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö.
#
# –§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ –≤—ã–≤–µ—Å—Ç–∏ –æ–¥–Ω–æ —á–∏—Å–ª–æ ‚Äì –Ω–æ–º–µ—Ä —á–µ–ª–æ–≤–µ–∫–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤ –∫—Ä—É–≥—É –ø–æ—Å–ª–µ–¥–Ω–∏–º.

# n,k = int(input()),int(input())
# l = 0
# for i in range(1,n+1):
#     l = (l + k) % i
# print(l +  1)

# ------------------------------------------------------------------------------------------------------------------
#                                                     –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–Ω—ã–µ —á–µ—Ç–≤–µ—Ä—Ç–∏
# –§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# –í –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–ø–∏—Å–∞–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ—á–µ–∫. –ö–∞–∂–¥–∞—è —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ–∏—Ç –∏–∑ –¥–≤—É—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª ‚Äî –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç —Ç–æ—á–∫–∏ (—Å–Ω–∞—á–∞–ª–∞ –∞–±—Å—Ü–∏—Å—Å–∞ ‚Äì xx, –∑–∞—Ç–µ–º –æ—Ä–¥–∏–Ω–∞—Ç–∞ ‚Äì yy), —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–º –ø—Ä–æ–±–µ–ª–∞.

# mas = [[int(i) for i in input().split()] for i in range(int(input()))]
# first = 0
# second = 0
# third = 0
# fourth = 0
# for i in mas:
#     if i[0]  ==   0 or i[1] == 0:
#         continue
#     if i[0] > 0:
#         if i[1] > 0:
#             first += 1
#         else:
#             fourth += 1
#     else:
#         if i[1] > 0:
#             second += 1
#         else:
#             third += 1
#
# print(f'''–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {first}
# –í—Ç–æ—Ä–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {second}
# –¢—Ä–µ—Ç—å—è —á–µ—Ç–≤–µ—Ä—Ç—å: {third}
# –ß–µ—Ç–≤–µ—Ä—Ç–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {fourth}''')
#
#
#
# n = int(input())
# count = [0, 0, 0, 0]
# names = ['–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å:', '–í—Ç–æ—Ä–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å:',
#          '–¢—Ä–µ—Ç—å—è —á–µ—Ç–≤–µ—Ä—Ç—å:', '–ß–µ—Ç–≤–µ—Ä—Ç–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å:']
#
# for _ in range(n):
#     x, y = [int(num) for num in input().split()]
#     if x > 0 and y > 0:
#         count[0] += 1
#     elif x < 0 and y > 0:
#         count[1] += 1
#     elif x < 0 and y < 0:
#         count[2] += 1
#     elif x > 0 and y < 0:
#         count[3] += 1
#
# for i in range(4):
#     print(names[i], count[i])
#
#
# a = [tuple(map(int, input().split())) for n in range(int(input()))]
# print('–ü–µ—Ä–≤–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {}'.format(sum([1 for t in a if t[0] > 0 and t[1] > 0])))
# print('–í—Ç–æ—Ä–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {}'.format(sum([1 for t in a if t[0] < 0 and t[1] > 0])))
# print('–¢—Ä–µ—Ç—å—è —á–µ—Ç–≤–µ—Ä—Ç—å: {}'.format(sum([1 for t in a if t[0] < 0 and t[1] < 0])))
# print('–ß–µ—Ç–≤–µ—Ä—Ç–∞—è —á–µ—Ç–≤–µ—Ä—Ç—å: {}'.format(sum([1 for t in a if t[0] > 0 and t[1] < 0])))

# ---------------------------------------------------------------------------------------------------------------------
# –ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª.–ò–∑ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–æ–∫–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è —Å–ø–∏—Å–æ–∫ —á–∏—Å–µ–ª.–ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è –º–µ–Ω—è–µ—Ç –º–µ—Å—Ç–∞–º–∏ —Å–æ—Å–µ–¥–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã
# —Å–ø–∏—Å–∫–∞(a[0] c a[1], a[2] c a[3] –∏ —Ç.–¥.).–ï—Å–ª–∏ –≤ —Å–ø–∏—Å–∫–µ –Ω–µ—á–µ—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤, —Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ —Å–≤–æ–µ–º –º–µ—Å—Ç–µ.

# mas = [int(i) for i in input().split()]
# if len(mas) == 1:
#     mas = mas
# elif len(mas) %  2 ==  0:
#     for i in range(0,len(mas),2):
#         mas[i],mas[i+1]  = mas[i+1],mas[i]
# else:
#     for i in range(0,len(mas)-1,2):
#         mas[i],mas[i+1]  = mas[i+1],mas[i]
#
# print(*mas)
#
#
#
# digits = [int(c) for c in input().split()]
#
# for i in range(1, len(digits), 2):
#     digits[i - 1], digits[i] = digits[i], digits[i - 1]
#
# print(*digits)

# ----------------------------------------------------------------------------------------------------
# n = int(input())
# flag = '–ù–ï–¢'
# mas = [int(i) for i in input().split()]
# for k in mas:
#     big = k
#     for i in range(n + 1):
#         for j in range(n + 1):
#             if big == mas[i] * mas[j]:
#                 flag = '–î–ê'
#                 break
#
# print(flag)

# --------------------------------------------------------------
#                     –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞

# x, y = input(), input()
# var = ['–∫–∞–º–µ–Ω—å', '–Ω–æ–∂–Ω–∏—Ü—ã', '–±—É–º–∞–≥–∞']
# ans = ['–Ω–∏—á—å—è', '–†—É—Å–ª–∞–Ω', '–¢–∏–º—É—Ä']
# print(ans[var.index(x) - var.index(y)])
#
# print(['–Ω–∏—á—å—è', '–¢–∏–º—É—Ä', '–†—É—Å–ª–∞–Ω'][input().count('–∞') - input().count('–∞')])


# s = input().split('–û')
# print(len(max(s)))

# n = int(input())
# mas  = [[j for j in input()] for i in range(n)]
# for i in range(len(mas)):
#     if 'a' in mas[i] and mas[i].count('n') >= 2 and 't' in mas[i] and 'o' in mas[i] :
#         print(i+1, end=' ')


# mas = [float(i) for i in input().split()]
# for i, el in enumerate(mas):
#     if  el < 0:
#         mas[i] = -1.0
#
# print(mas)

# mas = [int(input()) for i in range(int(input()))]
# num = int(input())
# flag = '–ù–ï–¢'
# for i in range(len(mas) ):
#     for j in range(len(mas) ):
#         if i != j:
#             if mas[j] * mas[i] == num:
#                 flag = '–î–ê'
#
# print(flag)

# list1 = [10, 20, [300, 400, [5000, 6000], 500], 30, 40]
# list1[2][2].append(7000)
#
# print(list1)

# list1 = ['a', 'b', ['c', ['d', 'e', ['f', 'g'], 'k'], 'l'], 'm', 'n']
# sub_list = ['h', 'i', 'j']
#
# list1[2][1][2].extend(sub_list)
# print(list1)


# list1 = [[1, 7, 8], [9, 7, 102], [6, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
# maximum = -1
# for i in range(len(list1)):
#     if max(list1[i]) > maximum:
#         maximum = max(list1[i])
# print(maximum)

# list1 = [[1, 7, 8], [9, 7, 102], [102, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
# for i in range(len(list1)):
#     list1[i] = list1[i][::-1]
#
# print(list1)

# list1 = [[1, 7, 8], [9, 7, 102], [102, 106, 105], [100, 99, 98, 103], [1, 2, 3]]
# total = 0
# counter = 0
#
# for i in list1:
#     for j in i:
#         total += j
#         counter += 1
#
# print(total / counter)


# n = int(input())
# mas = [[int(i) for i in range(1,n+1)] for i in range(n)]
# print(*mas,sep='\n')
#
#
# n  = int(input())
# print(*[list(range(1,i+1)) for i in range(1,n+1)],sep='\n')


# mas = []
# ras = []
# for m in input().split():
#     if len(ras) == 0:
#         ras.append(m)
#     else:
#         if ras[-1] ==  m:
#             ras.extend(m)
#         else:
#             mas.append(ras)
#             ras = []
#             ras.append(m)
# if ras:
#     mas.append(ras)
# print(mas)


# from math  import factorial
#
# n = int(input())
# mas = []
# for i in range(n+1):
#     mas.append(int(factorial(n) /( factorial(i) * factorial(n  - i) )))
#
# print(mas)


# def pascal_treangle(n):
#     p = []
#     for i in range(n):
#         row = [1] * (i + 1)
#         for j in range( i + 1):
#             if j != 0 and j != i:
#                 row[j] =  p[i-1][j-1] + p[i-1][j]
#         p.append(row)
#
#     for i  in p:
#         print(*i)
#
# pascal_treangle(5)


# from math import factorial
# def pascal(n):
#     mas = []
#     for i in range(n+1):
#         mas.append(int(factorial(n)/ (factorial(i) * factorial(n-i))))
#     return(mas)
#
# print(pascal(int(input())))


# for i in range(int(input())):
#     s, virus, x = input(), 'anton', 0
#     for j in s:
#         if j == virus[x]:
#             x += 1
#         if x == 5:
#             print(i+1, end= ' ')
#             break


# a, b = input(), input()
# mass = ['–Ω–æ–∂–Ω–∏—Ü—ã–±—É–º–∞–≥–∞', '–Ω–æ–∂–Ω–∏—Ü—ã—è—â–µ—Ä–∏—Ü–∞', '–±—É–º–∞–≥–∞–∫–∞–º–µ–Ω—å', '–±—É–º–∞–≥–∞–°–ø–æ–∫', '–∫–∞–º–µ–Ω—å—è—â–µ—Ä–∏—Ü–∞', '–∫–∞–º–µ–Ω—å–Ω–æ–∂–Ω–∏—Ü—ã', '—è—â–µ—Ä–∏—Ü–∞–°–ø–æ–∫', '—è—â–µ—Ä–∏—Ü–∞–±—É–º–∞–≥–∞', '–°–ø–æ–∫–Ω–æ–∂–Ω–∏—Ü—ã', '–°–ø–æ–∫–∫–∞–º–µ–Ω—å']
# if a == b:
#     print('–Ω–∏—á—å—è')
# elif a + b  in mass:
#     print('–¢–∏–º—É—Ä')
# else:
#     print('–†—É—Å–ª–∞–Ω')

# b = ['–∞', '–±', '–≤', '–≥', '–¥', '–µ', '–∂', '–∑', '–∏', '–π', '–∫', '–ª', '–º', '–Ω', '–æ', '–ø', '—Ä', '—Å', '—Ç', '—É', '—Ñ', '—Ö', '—Ü',
#      '—á', '—à', '—â', '—ä', '—ã', '—å', '—ç', '—é', '—è']
# s = input()
# res = s + ' –∑–∞–ø—Ä–µ—Ç–∏–ª –±—É–∫–≤—É '
# for i in b:
#     while i in res:
#         print(res + i)
#         res = res.replace(i, '')
#         res = res.lstrip()
#         res = res.replace('  ',' ')


# word = input() + ' –∑–∞–ø—Ä–µ—Ç–∏–ª –±—É–∫–≤—É'
# alpha = [chr(i) for i in range(1072, 1104)]
#
# for letter in alpha:
#     if letter in word:
#         print(word, letter)
#         word = word.replace(letter, '').replace('  ', ' ').strip()

# mas = input().split()
# n = int(input())
# def chanked(mas,n):
#     res = []
#     for i in range(len(mas)):
#         if mas[:n]:
#             res.append(mas[:n])
#             del mas[:n]
#     return res
#
# print(chanked(mas,n))

def print_matrix(matrix, n, width=1):
    for r in range(n):
        for c in range(n):
            print(str(matrix[r][c]).ljust(width), end=' ')
        print()


n = int(input())
matrix = []
for i in range(n):
    temp = [int(num) for num in input().split()]
    matrix.append(temp)


n = int(input())
m = int(input())
mas = [[input() for j in range(m)] for i in range(n)]
for i in mas:
    for j in i:
        print(*j, end=' ')
    print()
